<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picWindow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v/8PlIHw8mupvgsAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="tmrTime.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>